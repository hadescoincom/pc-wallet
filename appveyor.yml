version: '{build}'
image: Visual Studio 2017

environment:
  BOOST_ROOT: C:\Libraries\boost_1_67_0
  OPENSSL_ROOT_DIR: c:\hds-libs\openssl
  QT5_ROOT_DIR: c:/hds-libs/qt5-static-win
  QML_IMPORT_PATH: c:\hds-libs\qt5-static-win\qml
  BUILD_SERVER:
    secure: 5oPcbgETrXo4nmgoqILqgzdjyghCp4tEsBR4gzpEall4E9Vy77ArnCHSRjtLIEai  
  BUILD_CONFIG: RelWithDebInfo
  PATH: c:\hds-libs\qt5-static-win\bin;$(PATH)
 
before_build:
  - cmd: git submodule update --init --recursive --remote --jobs 4
  - cmd: cd hds
  - cmd: git apply 3rdparty/protobuf-patch.diff
  - cmd: cd ..
  - cmd: git clone --depth=1 https://github.com/hadescoincom/libs.git c:/hds-libs
  - cmd: git clone --depth=1 https://github.com/nesbox/qt5-static-win.git c:/hds-libs/qt5-static-win
  - cmd: cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_BUILD_TYPE=%BUILD_CONFIG% -DHDS_LINK_TYPE=Static -DBRANCH_NAME=%APPVEYOR_REPO_BRANCH% -DHDS_HW_WALLET=Off .

test_script:
  - cmd: ctest -C %BUILD_CONFIG% --verbose

build_script:
  - cmake --build . --parallel --config %BUILD_CONFIG%

after_build:
- ps: $env:DATE=[TimeZoneInfo]::ConvertTimeBySystemTimeZoneId([DateTime]::UtcNow, "Belarus Standard Time").ToString('yyyy.MM.dd')
- ps: $env:TIME=[TimeZoneInfo]::ConvertTimeBySystemTimeZoneId([DateTime]::UtcNow, "Belarus Standard Time").ToString('HH:mm:ss')
- cmd: >-
    cpack --verbose -G NSIS -C %BUILD_CONFIG%
    
    set /p HDS_VERSION=<hds_version.gen

    echo HDS_VERSION = %HDS_VERSION%

    del hds_version.gen
    
    mkdir pdb
    
    7z a c:/projects/pc-wallet/hds/hds-pdb-%HDS_VERSION%.zip "c:/projects/pc-wallet/ui/%BUILD_CONFIG%/Hds Wallet.pdb"

    copy c:\projects\pc-wallet\hds\hds-pdb-%HDS_VERSION%.zip c:\projects\pc-wallet\pdb\hds-pdb-%HDS_VERSION%.zip

    copy c:\projects\pc-wallet\HdsWallet-%HDS_VERSION%-win64.exe c:\projects\pc-wallet\Hds-Wallet-%HDS_VERSION%.exe

on_success:
- ps: $env:DATE=[TimeZoneInfo]::ConvertTimeBySystemTimeZoneId([DateTime]::UtcNow, "Belarus Standard Time").ToString('yyyy.MM.dd')
- ps: $env:TIME=[TimeZoneInfo]::ConvertTimeBySystemTimeZoneId([DateTime]::UtcNow, "Belarus Standard Time").ToString('HH:mm:ss')
- cmd: >-
    set BUILDS_SERVER_PATH=%BUILD_SERVER%/%APPVEYOR_REPO_BRANCH%/%DATE%/Release/win
              
    curl --retry 3 --ftp-create-dirs -T "c:/projects/pc-wallet/HdsWallet-%HDS_VERSION%-win64.exe" "%BUILDS_SERVER_PATH%/Hds-Wallet-%HDS_VERSION%.exe"

    curl --retry 3 --ftp-create-dirs -T "c:/projects/pc-wallet/hds/hds-pdb-%HDS_VERSION%.zip" "%BUILDS_SERVER_PATH%/pdb/hds-pdb-%HDS_VERSION%.zip"

artifacts:

  - path: pdb/hds-pdb-%HDS_VERSION%.zip
    name: HdsPdb

  - path: Hds-Wallet-%HDS_VERSION%.exe
    name: HdsWallet

deploy:
#  provider: S3
#  access_key_id:
#    secure: vku9qEnfo8NirxsplNRBBezWqJa1sV5eSfpt2syfwwk=
#  secret_access_key:
#    secure: sBTxw2gzbkQrPyMDF5OihFJ+s96yDgNgqbF1/MNmWpYMKrZwkOzIeExfW4Cp3F8B
#  bucket: builds.hadescoin.com
#  region: us-west-2
#  unzip: false
#  set_public: true
#  folder: "%APPVEYOR_REPO_BRANCH%/%DATE%/Release/win/"
#  artifact: HdsPdb, HdsWallet
  release: HdsDesktopWallet-v$(APPVEYOR_BUILD_VERSION)
  description: 'HdsDesktopWallet Release'
  provider: GitHub
  auth_token:
    secure: /Cj91YiCpTQRLfi0DR5BOPSdC1N1kg7mEtM46alx4B8dcKTm+/sOYtVK/pB16Ty9 # your encrypted token from GitHub
  artifact: /.*\.nupkg/            # upload all NuGet packages to release assets
  draft: false
  prerelease: false
  on:
    branch: master                 # release from master branch only
    APPVEYOR_REPO_TAG: true        # deploy on tag push only

notifications:
  - provider: Email
    to:
      - hadescoincom@gmail.com
